# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

keychain_name = "temporary_keychain"
keychain_password = SecureRandom.base64

platform :ios do

  desc "Push a new release build to the App Store"
  lane :release do
    build
    deliver
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  lane :beta do
    build
    pilot
  end

  desc "Create CardGameSim.ipa"
  lane :build do
    disable_automatic_code_signing(path: ENV["UNITY_BUILD_CACHE"] + "/iOS/Unity-iPhone.xcodeproj")
    certificates
    update_project_provisioning(
      xcodeproj: ENV["UNITY_BUILD_CACHE"] + "/iOS/Unity-iPhone.xcodeproj",
      target_filter: "Unity-iPhone",
      profile: ENV["sigh_com.finoldigital.CardGameSim_appstore_profile-path"],
      code_signing_identity: "iPhone Distribution: Finol Digital LLC (49G524X5NY)"
    )
    gym(
      project: ENV["UNITY_BUILD_CACHE"] + "/iOS/Unity-iPhone.xcodeproj",
      scheme: "Unity-iPhone",
      clean: true,
      skip_profile_detection: true,
      codesigning_identity: "iPhone Distribution: Finol Digital LLC (49G524X5NY)",
      export_method: "app-store",
      export_options: {
        method: "app-store",
        provisioningProfiles: {
          "com.finoldigital.CardGameSim" => "match AppStore com.finoldigital.CardGameSim"
        }
      }
    )
  end

  desc "Synchronize certificates"
  lane :certificates do
    cleanup_keychain
    create_keychain(
      name: keychain_name,
      password: keychain_password,
      default_keychain: true,
      lock_when_sleeps: true,
      timeout: 3600,
      unlock: true
    )
    match(
      type: "appstore",
      readonly: true,
      keychain_name: keychain_name,
      keychain_password: keychain_password
    )
  end

  lane :cleanup_keychain do
    if File.exist?(File.expand_path("~/Library/Keychains/#{keychain_name}-db"))
      delete_keychain(name: keychain_name)
    end
  end

  after_all do
    if File.exist?(File.expand_path("~/Library/Keychains/#{keychain_name}-db"))
      delete_keychain(name: keychain_name)
    end
  end

end

platform :mac do
  desc "Upload a new Mac version to the Mac App Store"
  lane :macupload do
    deliver
  end
end