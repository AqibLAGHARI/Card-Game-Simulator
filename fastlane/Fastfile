# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

project = ENV["TRAVIS_BUILD_DIR"] + "/builds/iOS/Unity-iPhone.xcodeproj"
scheme = "Unity-iPhone"
team_id = "49G524X5NY"
profile = ENV["sigh_com.finoldigital.CardGameSim_appstore_profile-path"]
codesigning_identity = "iPhone Distribution: Finol Digital LLC (49G524X5NY)"
keychain_name = "fastlane"
keychain_password = SecureRandom.base64
def set_fastlane_keychain
  ENV["MATCH_KEYCHAIN_NAME"] = keychain_name
  ENV["MATCH_KEYCHAIN_PASSWORD"] = keychain_password
  if File.exist?(File.expand_path("~/Library/Keychains/#{keychain_name}-db"))
    delete_keychain(
      name: keychain_name
    )
  end
  create_keychain(
    name: keychain_name,
    password: keychain_password,
    default_keychain: true,
    lock_when_sleeps: true,
    timeout: 3600,
    unlock: true
  )
end

platform :ios do

  desc "Synchronize certificates"
  lane :certificates do
    set_fastlane_keychain
    match(
      type: "appstore",
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      readonly: true
    )
  end

  desc "Create ipa"
  lane :build do
    disable_automatic_code_signing(
      path: project,
      team_id: team_id
    )
    certificates
    update_project_provisioning(
      xcodeproj: project,
      target_filter: scheme,
      profile: profile,
      code_signing_identity: codesigning_identity
    )
    gym(
      project: project,
      scheme: scheme, 
      clean: true
    )
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  lane :beta do
    build
    pilot
  end

  desc "Push a new release build to the App Store"
  lane :release do
    build
    deliver
  end

end