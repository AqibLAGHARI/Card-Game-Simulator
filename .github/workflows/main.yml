name: Build and Release CGS
on:
  push: { branches: [develop, master] }
  pull_request: { branches: [master] }
  release: { types: [published] }
jobs:
  buildForAllPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
#          - Android
          - iOS
#          - StandaloneOSX
#          - StandaloneLinux64
#          - WebGL
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
      - uses: webbertakken/unity-builder@6ece6447b229baedca54df3aae22fc3d097bc4f3
        with:
          unityVersion: 2019.4.1f1
          targetPlatform: ${{ matrix.targetPlatform }}
          buildsPath: builds
          androidAppBundle: true
          androidKeystoreName: finoldigital.keystore
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
      - uses: actions/upload-artifact@v1
        if: github.event.ref != 'refs/heads/develop'
        with:
          name: cgs-nonwindows-builds
          path: builds
  buildAndReleaseWindows:
    name: Build and Release to the Microsoft Store
    runs-on: windows-latest
    needs: buildForAllPlatforms
    env:
      UNITY_USERNAME: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Install Unity
        uses: crazy-max/ghaction-chocolatey@v1.2.2
        with:
          args: install --yes unity --version=2019.4.1 unity-il2cpp --version=2019.4.1 unity-win-il2cpp --version=2019.4.1 unity-metro --version=2019.4.1
      - name: Activate License
        run: |
          Start-Process -FilePath "C:\Program Files\Unity\Editor\Unity.exe" -ArgumentList "-batchmode","–quit","-logfile activate.stdout.txt","-nographics","-username $env:UNITY_USERNAME","-password $env:UNITY_PASSWORD","-serial $env:UNITY_SERIAL" -NoNewWindow -Wait
        shell: pwsh
      - name: Build StandaloneWindows
        run: |
          Start-Process -FilePath "C:\Program Files\Unity\Editor\Unity.exe" -ArgumentList "-batchmode","–quit","-logfile build-windows.stdout.txt","-executeMethod Cgs.Editor.BuildCgs.BuildWindows" -NoNewWindow -Wait
        shell: pwsh
      - name: Build StandaloneWindows64
        run: |
          Start-Process -FilePath "C:\Program Files\Unity\Editor\Unity.exe" -ArgumentList "-batchmode","–quit","-logfile build-windows64.stdout.txt","-executeMethod Cgs.Editor.BuildCgs.BuildWindows64" -NoNewWindow -Wait
        shell: pwsh
      - name: Build Uwp
        run: |
          Start-Process -FilePath "C:\Program Files\Unity\Editor\Unity.exe" -ArgumentList "-batchmode","–quit","-logfile build-uwp.stdout.txt","-executeMethod Cgs.Editor.BuildCgs.BuildUwp" -NoNewWindow -Wait
        shell: pwsh
      - name: Return License
        run: |
          Start-Process -FilePath "C:\Program Files\Unity\Editor\Unity.exe" -ArgumentList "-batchmode","–quit","-logfile return.stdout.txt","-returnlicense" -NoNewWindow -Wait
        shell: pwsh
      - name: Print Logs
        run: |
          cat activate.stdout.txt
          cat build-windows.stdout.txt
          cat build-windows64.stdout.txt
          cat build-uwp.stdout.txt
          cat return.stdout.txt
        shell: pwsh
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.1
      - name: MSBuild
        run: |
          MSBuild "Card Game Simulator.sln" /p:Configuration=Master;UapAppxPackageBuildMode=StoreUpload
        shell: pwsh
      - name: Upload build
        uses: actions/upload-artifact@v1
        if: github.event.ref != 'refs/heads/develop'
        with:
          name: cgs-windows-builds
          path: builds
  releaseToStore:
    name: Release to Google Play and the App Store
    runs-on: macos-latest
    needs: buildForAllPlatforms
    if: github.event.action == 'published'
    env:
      APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
      APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_TEAM_NAME: ${{ secrets.APPLE_TEAM_NAME }}
      FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
      GOOGLE_PLAY_KEY_FILE: ${{ secrets.GOOGLE_PLAY_KEY_FILE }}
      MAC_APPLICATION_CERTIFICATE: ${{ secrets.MAC_APPLICATION_CERTIFICATE }}
      MAC_APPLICATION_PASSWORD: ${{ secrets.MAC_APPLICATION_PASSWORD }}
      MAC_INSTALLER_CERTIFICATE: ${{ secrets.MAC_INSTALLER_CERTIFICATE }}
      MAC_INSTALLER_PASSWORD: ${{ secrets.MAC_INSTALLER_PASSWORD }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      MATCH_PERSONAL_ACCESS_TOKEN: ${{ secrets.MATCH_PERSONAL_ACCESS_TOKEN }}
      MATCH_URL: ${{ secrets.MATCH_URL }}
      BUILDS_PATH: ${{ format('{0}/builds', github.workspace) }}
      GOOGLE_PLAY_KEY_FILE_PATH: ${{ format('{0}/fastlane/api-finoldigital.json', github.workspace) }}
      ANDROID_PACKAGE_NAME: com.finoldigital.cardgamesim
      IOS_APP_ID: com.finoldigital.CardGameSim
      MAC_APP_ID: com.finoldigital.CardGameSimulator
      PROJECT_NAME: Card Game Simulator
      RELEASE_NOTES: ${{ github.event.release.body }}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/download-artifact@v1
        with:
          name: cgs-builds
          path: builds
      - uses: maierj/fastlane-action@v1.4.0
        with:
          lane: 'fixversion'
      - name: Prepare for upload
        run: |
          echo "$GOOGLE_PLAY_KEY_FILE" > $GOOGLE_PLAY_KEY_FILE_PATH
          echo "$RELEASE_NOTES" > fastlane/metadata/android/en-US/changelogs/default.txt
          find $BUILDS_PATH -type f -iname "*.sh" -exec chmod +x {} \;
          chmod +x fastlane/sign-osx-build.sh
          ./fastlane/sign-osx-build.sh
      - uses: maierj/fastlane-action@v1.4.0
        with:
          lane: 'android playstore'
      - uses: maierj/fastlane-action@v1.4.0
        with:
          lane: 'ios release'
      - uses: maierj/fastlane-action@v1.4.0
        with:
          lane: 'mac macupload'
